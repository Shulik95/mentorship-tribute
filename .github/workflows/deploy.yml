name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Optimize files
        run: |
          # Remove development comments and optimize files
          echo "Optimizing for production..."
          
          # Create optimized version
          mkdir -p dist
          cp index.html dist/
          cp styles.css dist/
          cp script.js dist/
          cp hebrew-system.js dist/
          cp integration.js dist/
          cp manifest.json dist/
          cp sw.js dist/
          
          # Copy any additional assets if they exist
          if [ -d "assets" ]; then
            cp -r assets dist/
          fi
          
          # Update service worker cache version with git hash
          if [ -f "dist/sw.js" ]; then
            CACHE_VERSION="mentorship-testimonials-$(git rev-parse --short HEAD)"
            sed -i "s/mentorship-testimonials-v1.0.0/$CACHE_VERSION/g" dist/sw.js
          fi
          
          echo "Build completed successfully"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4